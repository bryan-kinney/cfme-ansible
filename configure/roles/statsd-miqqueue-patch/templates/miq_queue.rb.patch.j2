From 5fa19dc6907553cccae1ce84ee67392a30480c5d Mon Sep 17 00:00:00 2001
From: Archit Sharma <arcsharm@redhat.com>
Date: Sat, 4 Mar 2017 05:12:37 +0530
Subject: [PATCH] update miq_queue.rb

---
 miq_queue.rb | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

diff --git a/miq_queue.rb b/miq_queue.rb
index 0350b29..77922ba 100644
--- a/miq_queue.rb
+++ b/miq_queue.rb
@@ -122,6 +122,15 @@ class MiqQueue < ApplicationRecord
     end

     msg = MiqQueue.create!(options)
+    # cfme-performance statsd
+    # Send a +1 to each counter via statsd
+    $hostname = Socket.gethostname
+    $statsd = Statsd.new '{{statsd_host}}', 8125
+    $statsd.increment "manageiq.#{$hostname}.queue.queue_name.#{options[:queue_name]}"
+    $statsd.increment "manageiq.#{$hostname}.queue.priority.#{options[:priority]}"
+    $statsd.increment "manageiq.#{$hostname}.queue.role.#{options[:role]}"
+    $statsd.increment "manageiq.#{$hostname}.queue.zone.#{options[:zone]}"
+    # End cfme-performance statsd
     _log.info(MiqQueue.format_full_log_msg(msg))
     msg
   end
@@ -180,7 +189,15 @@ class MiqQueue < ApplicationRecord
     if result == :stale
       _log.debug("All #{prefetch_max_per_worker} messages stale, returning...")
     else
-      _log.info("#{MiqQueue.format_full_log_msg(result)}, Dequeued in: [#{Time.now - result.created_on}] seconds")
+      # cfme-performance statsd Log dequeue timings
+      seconds_taken = Time.now - result.created_on
+      _log.info("#{MiqQueue.format_full_log_msg(result)}, Dequeued in: [#{seconds_taken}] seconds")
+      $hostname = Socket.gethostname
+      $statsd = Statsd.new '{{statsd_host}}', 8125
+      map = {'ManageIQ::Providers::' => '', '::InfraManager::' => '_', '::' => '_' }
+      re = Regexp.new(map.keys.map { |x| Regexp.escape(x) }.join('|'))
+      $statsd.timing "manageiq.#{$hostname}.dequeue_stat.#{result.queue_name}.#{result.class_name.gsub(re, map)}.#{result.method_name}", seconds_taken * 1000
+      # End cfme-performance statsd
     end
     result
   end
@@ -380,6 +397,14 @@ class MiqQueue < ApplicationRecord
   def delivered(state, msg, result)
     self.state = state
     _log.info("#{MiqQueue.format_short_log_msg(self)}, State: [#{state}], Delivered in [#{Time.now - delivered_on}] seconds")
+    # cfme-performance statsd Log deliver timings
+    seconds_taken = Time.now - delivered_on
+    $hostname = Socket.gethostname
+    $statsd = Statsd.new '{{statsd_host}}', 8125
+    map = {'ManageIQ::Providers::' => '', '::InfraManager::' => '_', '::' => '_' }
+    re = Regexp.new(map.keys.map { |x| Regexp.escape(x) }.join('|'))
+    $statsd.timing "manageiq.#{$hostname}.deliver_stat.#{self.queue_name}.#{self.class_name.gsub(re, map)}.#{self.method_name}", seconds_taken * 1000
+    # End cfme-performance statsd
     m_callback(msg, result) unless miq_callback.blank?
   rescue => err
     _log.error("#{MiqQueue.format_short_log_msg(self)}, #{err.message}")
--
2.7.4
